{"ast":null,"code":"var _jsxFileName = \"/home/brandon/the_odin_project/weatherapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [imageArray, setImageArray] = useState([]);\n  const [imageData, setImageData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.giphy.com/v1/gifs/translate?api_key=GSyXgxVOX5BuSkUGuqSb7T3ICImghVGf&s=cats', {\n      mode: 'cors'\n    }).then(res => res.json()).then(info => {\n      let tempArray = Object.keys(info.data.images);\n      setImageData(info.data.images);\n      setImageArray(tempArray);\n      setImage(info.data.images.original.url);\n    });\n  }, []);\n\n  const handleChange = e => {\n    e.preventDefault();\n    let temp = Math.floor(Math.random() * imageArray.length);\n    let tempString = imageArray[temp];\n    setImage(imageData[tempString].url);\n    console.log(tempString); //var item = items[Math.floor(Math.random()*items.length)]\n  };\n\n  console.log(imageData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"cat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChange,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Xs8/kV43/BYfLZ7G44Hqv5AVBS0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/brandon/the_odin_project/weatherapp/src/App.js"],"names":["useEffect","useState","App","image","setImage","imageArray","setImageArray","imageData","setImageData","fetch","mode","then","res","json","info","tempArray","Object","keys","data","images","original","url","handleChange","e","preventDefault","temp","Math","floor","random","length","tempString","console","log"],"mappings":";;;;AACA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,KAAK,CAAC,yFAAD,EACL;AAACC,MAAAA,IAAI,EAAE;AAAP,KADK,CAAL,CAEGC,IAFH,CAEQC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAFd,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACZ,UAAIC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,IAAL,CAAUC,MAAtB,CAAhB;AACAX,MAAAA,YAAY,CAACM,IAAI,CAACI,IAAL,CAAUC,MAAX,CAAZ;AACAb,MAAAA,aAAa,CAACS,SAAD,CAAb;AACAX,MAAAA,QAAQ,CAACU,IAAI,CAACI,IAAL,CAAUC,MAAV,CAAiBC,QAAjB,CAA0BC,GAA3B,CAAR;AAAwC,KAP5C;AAQD,GATQ,EASP,EATO,CAAT;;AAWF,QAAMC,YAAY,GAAGC,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcvB,UAAU,CAACwB,MAApC,CAAX;AACA,QAAIC,UAAU,GAAGzB,UAAU,CAACoB,IAAD,CAA3B;AAEArB,IAAAA,QAAQ,CAACG,SAAS,CAACuB,UAAD,CAAT,CAAsBT,GAAvB,CAAR;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EANqB,CAQrB;AACD,GATH;;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYzB,SAAZ;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAIJ,KAAZ;AAAmB,MAAA,GAAG,EAAG;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAImB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlCQpB,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [image, setImage] = useState(null);\n  const [imageArray, setImageArray] = useState([]);\n  const [imageData, setImageData] = useState(null)\n\n  useEffect(()=>{\n    fetch('https://api.giphy.com/v1/gifs/translate?api_key=GSyXgxVOX5BuSkUGuqSb7T3ICImghVGf&s=cats', \n    {mode: 'cors'})\n      .then(res=> res.json())\n      .then(info => {\n        let tempArray = Object.keys(info.data.images)\n        setImageData(info.data.images)\n        setImageArray(tempArray)\n        setImage(info.data.images.original.url)})\n  },[])\n\nconst handleChange =(e)=>{\n    e.preventDefault();\n    let temp = Math.floor(Math.random()*imageArray.length)\n    let tempString = imageArray[temp]\n\n    setImage(imageData[tempString].url)\n    console.log(tempString)\n    \n    //var item = items[Math.floor(Math.random()*items.length)]\n  }\nconsole.log(imageData)\n  return (\n    <div className=\"App\">\n      <img src = {image} alt = 'cat'></img>\n      <button onClick = {handleChange}>Refresh</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}