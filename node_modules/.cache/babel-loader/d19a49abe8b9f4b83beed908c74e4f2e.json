{"ast":null,"code":"import _slicedToArray from\"/home/brandon/the_odin_project/weatherapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import Ui from'./Ui';// my api key for this is : 8a78e069bb74338cceace00e40be926d : DONT DO THIS FOR REALI\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Form(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchCityValue=_useState2[0],setSearchCityValue=_useState2[1];var _useState3=useState({temp:70,location:'Charlotte',condition:'Sunny',feelsLike:68,humidity:66,wind:2}),_useState4=_slicedToArray(_useState3,2),weatherData=_useState4[0],setWeatherData=_useState4[1];var handleFunction=function handleFunction(e){e.preventDefault();setSearchCityValue(e.target.value);};var submitFunction=function submitFunction(e){e.preventDefault();fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(searchCityValue,\"&units=imperial&appid=8a78e069bb74338cceace00e40be926d\"),{mode:'cors'}).then(function(res){return res.json();}).then(function(data){console.log(data.name);setWeatherData({temp:Math.round(data.main.temp),location:data.name,condition:data.weather[0].description,feelsLike:data.main.feels_like,humidity:data.main.humidity,wind:data.wind.speed});}).catch(function(err){console.log(err);});setSearchCityValue('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"main-display\",children:[/*#__PURE__*/_jsx(\"form\",{className:\"form\",onSubmit:submitFunction,children:/*#__PURE__*/_jsx(\"input\",{className:\"input\",name:\"city\",placeholder:\"City\",onChange:handleFunction,value:searchCityValue})}),/*#__PURE__*/_jsx(Ui,{temp:weatherData.temp,location:weatherData.location,condition:weatherData.condition,feelsLike:weatherData.feelsLike,humidity:weatherData.humidity,wind:weatherData.wind})]});}export default Form;","map":{"version":3,"sources":["/home/brandon/the_odin_project/weatherapp/src/form.js"],"names":["useState","Ui","Form","searchCityValue","setSearchCityValue","temp","location","condition","feelsLike","humidity","wind","weatherData","setWeatherData","handleFunction","e","preventDefault","target","value","submitFunction","fetch","mode","then","res","json","data","console","log","name","Math","round","main","weather","description","feels_like","speed","catch","err"],"mappings":"4HAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,EAAP,KAAe,MAAf,CAEA;wFACA,QAASC,CAAAA,IAAT,EAAgB,CAGZ,cAA8CF,QAAQ,CAAC,EAAD,CAAtD,wCAAOG,eAAP,eAAwBC,kBAAxB,eACA,eAAsCJ,QAAQ,CAAC,CAC3CK,IAAI,CAAE,EADqC,CAE3CC,QAAQ,CAAE,WAFiC,CAG3CC,SAAS,CAAE,OAHgC,CAI3CC,SAAS,CAAG,EAJ+B,CAK3CC,QAAQ,CAAE,EALiC,CAM3CC,IAAI,CAAE,CANqC,CAAD,CAA9C,yCAAOC,WAAP,eAAoBC,cAApB,eASD,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAM,CACxBA,CAAC,CAACC,cAAF,GACAX,kBAAkB,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB,CACH,CAHF,CAKA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACJ,CAAD,CAAM,CACxBA,CAAC,CAACC,cAAF,GACAI,KAAK,4DAAqDhB,eAArD,2DAA6H,CAC9HiB,IAAI,CAAE,MADwH,CAA7H,CAAL,CAGKC,IAHL,CAGU,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAJ,EAAF,EAHb,EAIKF,IAJL,CAIU,SAAAG,IAAI,CAAE,CACRC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,EAEAf,cAAc,CAAC,CACXP,IAAI,CAAEuB,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACM,IAAL,CAAUzB,IAArB,CADK,CAEXC,QAAQ,CAAEkB,IAAI,CAACG,IAFJ,CAGXpB,SAAS,CAAEiB,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBC,WAHhB,CAIXxB,SAAS,CAAEgB,IAAI,CAACM,IAAL,CAAUG,UAJV,CAKXxB,QAAQ,CAAEe,IAAI,CAACM,IAAL,CAAUrB,QALT,CAMXC,IAAI,CAAEc,IAAI,CAACd,IAAL,CAAUwB,KANL,CAAD,CAAd,CASH,CAhBL,EAiBKC,KAjBL,CAiBW,SAAAC,GAAG,CAAE,CACRX,OAAO,CAACC,GAAR,CAAYU,GAAZ,EAEH,CApBL,EAsBAhC,kBAAkB,CAAC,EAAD,CAAlB,CACH,CAzBF,CA2BC,mBACI,aAAK,SAAS,CAAC,cAAf,wBACI,aAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAIc,cAAnC,uBACI,cACA,SAAS,CAAG,OADZ,CAEA,IAAI,CAAG,MAFP,CAGA,WAAW,CAAG,MAHd,CAIA,QAAQ,CAAIL,cAJZ,CAKA,KAAK,CAAIV,eALT,EADJ,EADJ,cAYI,KAAC,EAAD,EAEA,IAAI,CAAIQ,WAAW,CAACN,IAFpB,CAGA,QAAQ,CAAGM,WAAW,CAACL,QAHvB,CAIA,SAAS,CAAIK,WAAW,CAACJ,SAJzB,CAKA,SAAS,CAAII,WAAW,CAACH,SALzB,CAMA,QAAQ,CAAIG,WAAW,CAACF,QANxB,CAOA,IAAI,CAAIE,WAAW,CAACD,IAPpB,EAZJ,GADJ,CAwBH,CAED,cAAeR,CAAAA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport Ui from './Ui'\n\n// my api key for this is : 8a78e069bb74338cceace00e40be926d : DONT DO THIS FOR REALI\nfunction Form (){\n\n    \n    const [searchCityValue, setSearchCityValue] = useState('');\n    const [weatherData, setWeatherData] = useState({\n        temp: 70,\n        location: 'Charlotte',\n        condition: 'Sunny',\n        feelsLike:  68,\n        humidity: 66,\n        wind: 2\n    })\n\n   const handleFunction = (e) =>{\n        e.preventDefault();\n        setSearchCityValue(e.target.value)\n    }\n\n   const submitFunction = (e) =>{\n        e.preventDefault();\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${searchCityValue}&units=imperial&appid=8a78e069bb74338cceace00e40be926d`,{\n            mode: 'cors'\n        })\n            .then(res=>res.json())\n            .then(data=>{\n                console.log(data.name)\n        \n                setWeatherData({\n                    temp: Math.round(data.main.temp),\n                    location: data.name,\n                    condition: data.weather[0].description,\n                    feelsLike: data.main.feels_like, \n                    humidity: data.main.humidity,\n                    wind: data.wind.speed\n\n                })\n            })\n            .catch(err=>{\n                console.log(err)\n\n            })\n            \n        setSearchCityValue('');    \n    }\n    \n    return(\n        <div className='main-display'>\n            <form className='form' onSubmit = {submitFunction}>\n                <input \n                className = 'input'\n                name = \"city\" \n                placeholder = \"City\"\n                onChange = {handleFunction}\n                value = {searchCityValue}>\n                </input>\n                {/* <button>Search!</button> */}\n                \n            </form>\n            <Ui \n            \n            temp = {weatherData.temp}\n            location= {weatherData.location}\n            condition = {weatherData.condition}\n            feelsLike = {weatherData.feelsLike}\n            humidity = {weatherData.humidity}\n            wind = {weatherData.wind}\n            />\n        </div>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}